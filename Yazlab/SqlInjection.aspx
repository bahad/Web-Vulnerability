<%@ Page Title="" Language="C#" MasterPageFile="~/Site1.Master" AutoEventWireup="true" CodeBehind="SqlInjection.aspx.cs" Inherits="Yazlab.SqlInjection" EnableEventValidation="false"%>
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="server">
    <asp:Button ID="Button1" runat="server" Text="Hepsini Listele" CssClass="bg-info" OnClick="Button1_Click" />
    </p>
    <asp:TextBox ID="TextBox1" runat="server" Width="132px"></asp:TextBox> <asp:Button ID="Button2" runat="server" Text="Isme Gore Listele" Width="183px" OnClick="Button2_Click" />
     <asp:GridView ID="GridView1" runat="server"></asp:GridView>
</asp:Content>
<asp:Content ID="Content2" runat="server" ContentPlaceHolderID="ContentPlaceHolder2">
    <div class="container">
  <!-- Trigger the modal with a button -->
  <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Yardım</button>

  <!-- Modal -->
  <div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <h3 class="modal-title">SqlInjection</h3>
        </div>
        <div class="modal-body">
          <p><strong>SqlInjection</strong> veritabanınızı yok edebilecek bir kod enjeksiyon tekniğidir.
              Web sayfası girişi yoluyla SQL ifadelerinde kötü amaçlı kod yerleştirilmesidir.
         </p>
          <p style="color: #FF0000; text-align: center;">Ornek Kod</p>
          <p><code> kullaniciAd = Request.QueryString["kullaniciAd"];</code> </p>
            <p> <code> SqlCommand cmd = new SqlCommand("Select * from kullanici 
                where kullaniciAd like'%" + kullaniciAd + "%'"</code></p>
            <p> Burada kullanıcı,veritabanında kayıtlı kullanıcıların listesini görmek istemektedir.
                Bunun için ilk başta Request.QueryString metodu kullanılarak kullanıcı adı 
                <strong>GET</strong> 
                metodu ile url de gösterilmektedir.Daha sonra like komutu kullanılarak kullanıcın girdiği
                harf veya kelimeye göre veritabanında kayıt aranmaktadır.Fakat saldırgan url ye herhangi bir
                sql sorgusu yazarak veritabanında degisiklik yapabilir. Bunun nedeni kullanıcı adı bilgisi 
                herhangi bir parametre kullanımı olmadan dogrudan Sql Sorgusuna gönderilmiştir.
            </p>
            <p style="color: #FF0000; text-align: center;">Ornek Sömürü</p>
            <p>Örnek olarak kullanıcının veritabanındaki bütün kullanıcıları silmesi icin Liste.aspx 
                üzerinde URL'ye </p>
            <p><code>http://localhost:56707/Liste.aspx?kullaniciAd=ba'; delete from kullanici -- </code></p>
            <p> kodunu yazması yeterli olacaktır. Boylece saldırgan veritabanında silme işlemini yapmış
                olacaktır.
            </p>
            <p style="text-align: center; color: #FF0000"> Dogru Kod</p>
            <p> SqlInjection.aspx sayfasında<code>SqlCommand cmd = new SqlCommand("Select * from kullanici where kullaniciAd 
                like @kullaniciAd", baglan.baglan());
            cmd.Parameters.AddWithValue("@kullaniciAd",TextBox1.Text+ "%"); </code></p>
            <p> Liste.aspx sayfasında <code>SqlCommand cmd = new SqlCommand("Select * from kullanici where kullaniciAd 
                like @KullaniciAd", baglan.baglan());
            cmd.Parameters.AddWithValue("@kullaniciAd","%");</code></p>
            <p>Düzenlemesi yapılarak kullanıcıAd degerine parametre verilmiş olmaktadır ve kullanıcının
                veri üzerinde işlem yapmasına izin vermemektedir..Bunun nedeni 
                bu işlemden sonra Sqlsorgusu kullanıcıAd 'la başlayan bir veri görmemektedir.

            </p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Çıkış</button>
        </div>
      </div>
      
    </div>
  </div>
  
</div>
</asp:Content>

